{"version":3,"sources":["assets/img/nokmaniphone.jpg","components/About/About.js","components/Projects/Projects.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","profile","width","height","borderRadius","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","primary","color","purple","A400","textprimary","Album","classes","className","Container","maxWidth","style","Typography","component","variant","align","gutterBottom","src","alt","paragraph","Grid","container","justify","item","Button","href","target","icon","marginRight","cardGrid","paddingTop","paddingBottom","card","display","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","name","description","github","deployed","image","Projects","map","index","key","xs","sm","md","Card","CardMedia","title","CardContent","CardActions","size","Copyright","Date","getFullYear","Footer","Link","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02ea1d33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nokmaniphone.1cdaf88c.jpg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Link from '@material-ui/core/Link';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport purple from '@material-ui/core/colors/purple';\n\nimport profile from \"../../assets/img/nokmaniphone.jpg\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  profile: {\n    width: 400,\n    height:550,\n    borderRadius: \"50% !important\"\n    \n\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  primary: {\n    color:purple.A400,\n\n  },\n  textprimary: {\n    color:\"white\"\n  },\n\n}));\nexport default function Album() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"m\" style={{ backgroundColor: 'black',  }}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n        <img src={profile} alt=\"...\" align=\"center\" className={classes.profile} />\n     </Typography>\n       \n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" className={classes.primary} gutterBottom>\n          Nokmaniphone Santhavichit Sayavong\n     </Typography>\n        <Typography variant=\"h5\" align=\"center\" className={classes.textprimary} paragraph>\n          I am a new programmer. I am very excited with all of the opportunities and challenges ahead of me in the programming game.\n     </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button href='https://github.com/nokmaniphone' target=\"_blank\" variant=\"outlined\" className={classes.primary}>\n                <GitHubIcon />\n           </Button>\n            </Grid>\n            <Grid item>\n              <Button href='https://www.linkedin.com/in/nokmaniphone-santhavicit-sayavong-10307a177' target=\"_blank\" variant=\"outlined\" className={classes.primary}>\n                <LinkedInIcon />\n           </Button>\n            </Grid>\n            <Grid item>\n              <Button href=\"https://drive.google.com/open?id=1vx7EKtc3j2gds45RIT32EEZMw5ACau9EFXkirdYvUfc\" target=\"_blank\" variant=\"outlined\" className={classes.primary}>\n                <PictureAsPdfIcon /> Resume\n           </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  )\n\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport purple from '@material-ui/core/colors/purple'\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  primary: {\n    color: purple.A400,\n  },\n}));\n\nconst cards = [{\n  name: 'Felp', description: \"This is a restaurant application whereby users can view restaurant ratings by simply searching for the establishment’s name and location. Users are also welcomed to write reviews of the restaurants they’ve attended. This is a hand- built, user authentication register and login to write a review and give restaurant a rating and using UI kit styling library.It utilizes RESTful routes, a mobile - responsive, full stack application, utilizing MySQL, Express, React - views, and Node.\", github: 'https://github.com/evanyang1/felp/tree/nok', deployed: 'https://warm-stream-20124.herokuapp.com/' , image: ''},\n  { name: 'Garden Array', description: \"This app, you can log in by accout or register for add your garden, add plant and search plant by name and add or delect.  \", github: 'https://github.com/UCI-Bootcamp/Garden-Array', deployed: 'http://banana-pudding-35031.herokuapp.com/' },\n  { name: 'GitHoops', description: \"A mobile-responsive web app with up-to-date NBA game, team, and player information, utilizing theSportsDB API, mySportsFeed API, ESPN API, and Google Maps API. Utilized HTML, CSS, JavaScript, and Materialize's styling library.\", github: 'https://github.com/nokmaniphone/GitHoops', deployed: 'https://nokmaniphone.github.io/GitHoops/' }]\n\nexport default function Projects() {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={4}>\n      {cards.map((card, index) => (\n        <Grid item key={index} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image=\"https://source.unsplash.com/random\"\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent} style={{ backgroundColor: 'black', color:'white' }}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.primary}>\n                {card.name}\n              </Typography>\n              <Typography>\n                {card.description}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button href={card.github} target=\"_blank\" size=\"small\" className={classes.primary}>\n                Github\n          </Button>\n              <Button href={card.deployed} target=\"_blank\" size=\"small\" className={classes.primary}>\n                Deployed\n          </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport purple from '@material-ui/core/colors/purple';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      Nokmaniphone Santhavichit Sayavong\n      {' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  primary: {\n    color: purple.A400,\n\n  },\n}));\n\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        <Link className={classes.primary} href=\"nokmaniphonesayavong@gmail.com\">\n          Contact Me\n      </Link>\n      </Typography>\n      <Copyright />\n    </footer>\n  )\n}","import React from 'react';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <>\n      <About />\n      <Projects />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}